name: Deploy

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  ecr:
    runs-on: ubuntu-latest
    outputs:
      ecr_repo_name: ${{ steps.set-envs.outputs.ECR_REPO_NAME }}
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.aws_region }}
          role-to-assume: arn:aws:iam::${{ vars.aws_account_id }}:role/${{ vars.aws_role }}
          role-session-name: GitHubActions

      - name: Init
        shell: bash
        run: |
          cd tf-ecr
          terraform init
    
      - name: Deploy
        shell: bash
        id: deploy
        run: |
          cd tf-ecr
          terraform apply -auto-approve -var-file=${{ github.workspace }}/variables.tfvars

      - name: Set env vars
        id: set-envs
        shell: bash
        run: |
          cd tf-ecr
          ECR_REPO_NAME=$(terraform output -raw repo_name)
          echo "ECR_REPO_NAME=$ECR_REPO_NAME" >> $GITHUB_OUTPUT

  image:
    runs-on: ubuntu-latest
    needs: ecr
    outputs:
      image_uri: ${{ steps.set-image-uri.outputs.image_uri }}
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.aws_region }}
          role-to-assume: arn:aws:iam::${{ vars.aws_account_id }}:role/${{ vars.aws_role }}
          role-session-name: GitHubActions

      - name: Build and push detected changes
        id: build-image
        uses: ./.github/actions/build_image
        with:
          aws_account_id: ${{ vars.aws_account_id }}
          aws_region: ${{ vars.aws_region }}
          ecr_repository_name: ${{ needs.ecr.outputs.ecr_repo_name }}

      - name: Set image_uri output
        id: set-image-uri
        run: |
          echo "image_uri=${{ env.IMAGE_URI }}" >> $GITHUB_OUTPUT

  tf:
    needs: image
    runs-on: ubuntu-latest
    env:
      TF_VAR_ecs_image_uri: ${{ needs.image.outputs.image_uri }}
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.aws_region }}
          role-to-assume: arn:aws:iam::${{ vars.aws_account_id }}:role/${{ vars.aws_role }}
          role-session-name: GitHubActions

      - name: Init
        shell: bash
        run: |
          cd tf
          terraform init
    
      - name: Deploy
        shell: bash
        id: deploy
        run: |
          cd tf
          terraform apply -auto-approve -var-file=${{ github.workspace }}/variables.tfvars
