name: Destroy

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  TF_VAR_lb_target_group_arn: "arn:aws:elasticloadbalancing:us-east-1:123456789012:targetgroup/dummy-target-group/1234567890123456"
  TF_VAR_ecr_repo_name: ${{ vars.aws_account_id }}-weighted-target-ecs
  TF_VAR_lb_security_group_id: "sg-0123456789abcdef0"

jobs:
  lambda:
    runs-on: ubuntu-latest
    env:
      TF_VAR_lambda_zip: not_exists.zip
      TF_VAR_lb_listener_arn: arn:aws:elasticloadbalancing:eu-west-2:123456789012:listener/app/my-load-balancer/50dc6c495c0c9188/a6c72cd8d5cd4c43
      TF_VAR_lambda_bucket: not_exists
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.aws_region }}
          role-to-assume: arn:aws:iam::${{ vars.aws_account_id }}:role/${{ vars.aws_role }}
          role-session-name: GitHubActions

      - name: Init
        shell: bash
        run: |
          cd tf/lambda
          terraform init
    
      - name: Destroy
        shell: bash
        id: destroy
        run: |
          cd tf/lambda
          terraform destroy -auto-approve -var-file=${{ github.workspace }}/variables.tfvars

  ecs:
    runs-on: ubuntu-latest
    env:
      TF_VAR_ecs_image_uri: nnnn
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.aws_region }}
          role-to-assume: arn:aws:iam::${{ vars.aws_account_id }}:role/${{ vars.aws_role }}
          role-session-name: GitHubActions

      - name: Init
        shell: bash
        run: |
          cd tf/ecs
          terraform init
    
      - name: Destroy
        shell: bash
        id: destroy
        run: |
          cd tf/ecs
          terraform destroy -auto-approve -var-file=${{ github.workspace }}/variables.tfvars

  network:
    runs-on: ubuntu-latest
    needs: 
      - ecs
      - lambda
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.aws_region }}
          role-to-assume: arn:aws:iam::${{ vars.aws_account_id }}:role/${{ vars.aws_role }}
          role-session-name: GitHubActions

      - name: Init
        shell: bash
        run: |
          cd tf/network
          terraform init
    
      - name: Destroy
        shell: bash
        id: destroy
        run: |
          cd tf/network
          terraform destroy -auto-approve -var-file=${{ github.workspace }}/variables.tfvars
        
  repo:
    runs-on: ubuntu-latest
    env:
      TF_VAR_lambda_code_bucket_name: not_exists
    needs: ecs
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.aws_region }}
          role-to-assume: arn:aws:iam::${{ vars.aws_account_id }}:role/${{ vars.aws_role }}
          role-session-name: GitHubActions

      - name: Init
        shell: bash
        run: |
          cd tf/repo
          terraform init
    
      - name: Destroy
        shell: bash
        id: destroy
        run: |
          cd tf/repo
          terraform destroy -auto-approve -var-file=${{ github.workspace }}/variables.tfvars
